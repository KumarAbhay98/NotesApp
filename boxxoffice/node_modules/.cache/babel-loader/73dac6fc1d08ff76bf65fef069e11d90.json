{"ast":null,"code":"import React from'react';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Register=function Register(){var validationSchema=Yup.object({firstName:Yup.string().max(15,'Must be 15 characters or less').required('Required'),lastName:Yup.string().max(20,'Must be 20 characters or less').required('Required'),email:Yup.string().email('Email is invalid').required('Email is required'),password:Yup.string().min(6,'Password must be at least 6 characters').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,'Password must contain at least one lowercase letter, one uppercase letter, one digit, and one special character').required('Password is required'),confirmPassword:Yup.string().oneOf([Yup.ref('password'),null],'Password must match').required('Confirm password is required')});var initialValues={firstName:'',lastName:'',Gender:'',Number:'',email:'',password:'',confirmPassword:''};var handleSubmit=function handleSubmit(values){alert(JSON.stringify(values,null,2));alert('You have successfully registered');};return/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"tittlee\",children:/*#__PURE__*/_jsx(\"span\",{className:\"welcomee\",children:\"Register\"})})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"label\",{children:\" First name \"}),/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"firstName\",placeholder:\"First name\",required:\"\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"firstName\",component:\"div\",className:\"error-message\"}),/*#__PURE__*/_jsx(\"label\",{children:\" Last name: \"}),/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"lastName\",placeholder:\"Last name\",required:\"\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"lastName\",component:\"div\",className:\"error-message\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Email\"})}),/*#__PURE__*/_jsx(Field,{type:\"email\",name:\"email\",placeholder:\"Enter Email\",required:\"\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"div\",className:\"error-message\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Password\"})}),/*#__PURE__*/_jsx(Field,{type:\"password\",placeholder:\"Enter Password\",name:\"password\",required:\"\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\",component:\"div\",className:\"error-message\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Re-type Password\"})}),/*#__PURE__*/_jsx(Field,{type:\"password\",placeholder:\"Retype Password\",name:\"confirmPassword\",required:\"\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"confirmPassword\",component:\"div\",className:\"error-message\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"registerbtn\",children:\"Register\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-dark mt-3 ml-3\",children:\"Back\"})]})})});};export default Register;","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","Link","Register","validationSchema","object","firstName","string","max","required","lastName","email","password","min","matches","confirmPassword","oneOf","ref","initialValues","Gender","Number","handleSubmit","values","alert","JSON","stringify"],"sources":["D:/boXXoFFice/boxxoffice/src/component/Register.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, 'Must be 15 characters or less')\r\n      .required('Required'),\r\n    lastName: Yup.string()\r\n      .max(20, 'Must be 20 characters or less')\r\n      .required('Required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,\r\n        'Password must contain at least one lowercase letter, one uppercase letter, one digit, and one special character'\r\n      )\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Password must match')\r\n      .required('Confirm password is required'),\r\n  });\r\n\r\n  const initialValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    Gender: '',\r\n    Number: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    alert(JSON.stringify(values, null, 2));\r\n    alert('You have successfully registered');\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Form>\r\n        <div className=\"container\">\r\n          <center>\r\n            <div className=\"tittlee\">\r\n              <span className=\"welcomee\">Register</span>\r\n            </div>\r\n          </center>\r\n          <hr />\r\n\r\n          {/* firstName */}\r\n          <label> First name </label>\r\n          <Field type=\"text\" name=\"firstName\" placeholder=\"First name\" required=\"\" />\r\n          <ErrorMessage name=\"firstName\" component=\"div\" className=\"error-message\" />\r\n\r\n          {/* lastName */}\r\n          <label> Last name: </label>\r\n          <Field type=\"text\" name=\"lastName\" placeholder=\"Last name\" required=\"\" />\r\n          <ErrorMessage name=\"lastName\" component=\"div\" className=\"error-message\" />\r\n\r\n          {/* email */}\r\n          <label htmlFor=\"email\"><b>Email</b></label>\r\n          <Field type=\"email\" name=\"email\" placeholder=\"Enter Email\" required=\"\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" className=\"error-message\" />\r\n\r\n          {/* password */}\r\n          <label htmlFor=\"password\"><b>Password</b></label>\r\n          <Field type=\"password\" placeholder=\"Enter Password\" name=\"password\" required=\"\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" className=\"error-message\" />\r\n\r\n          {/* ReType */}\r\n          <label htmlFor=\"confirmPassword\"><b>Re-type Password</b></label>\r\n          <Field type=\"password\" placeholder=\"Retype Password\" name=\"confirmPassword\" required=\"\" />\r\n          <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"error-message\" />\r\n\r\n          {/* Register button */}\r\n          <button type=\"submit\" className=\"registerbtn\">\r\n            Register\r\n          </button>\r\n          <br />\r\n\r\n          {/* Back button */}\r\n          <Link to=\"/\" className=\"btn btn-dark mt-3 ml-3\">Back</Link>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
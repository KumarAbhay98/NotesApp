{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\boXXoFFice\\\\boxxoffice\\\\src\\\\component\\\\Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { TextField } from './Textfield';\nimport * as Yup from 'yup';\nimport { GoogleLoginButton } from \"react-social-login-buttons\";\nimport { GithubLoginButton } from \"react-social-login-buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const validate = Yup.object({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 charaters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match').required('Confirm password is required')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginform\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loginn my-4 font-weight-bold .display-4 text-center\",\n        style: {\n          color: \"red\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          name: \"confirmPassword\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"Submit\",\n          className: \"registerbtn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Link","Formik","Form","TextField","Yup","GoogleLoginButton","GithubLoginButton","Login","validate","object","email","string","required","password","min","confirmPassword","oneOf","ref","values","console","log","color"],"sources":["C:/Users/DELL/OneDrive/Desktop/boXXoFFice/boxxoffice/src/component/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './Textfield';\r\nimport * as Yup from 'yup';\r\nimport { GoogleLoginButton } from \"react-social-login-buttons\";\r\nimport { GithubLoginButton } from \"react-social-login-buttons\";\r\n\r\nconst Login = () => {\r\n\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n        password: Yup.string()\r\n            .min(6, 'Password must be at least 6 charaters')\r\n            .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Password must match')\r\n            .required('Confirm password is required'),\r\n    })\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            }}\r\n            validationSchema={validate}\r\n            onSubmit={values => {\r\n                console.log(values)\r\n            }}\r\n        >\r\n            {Formik => (\r\n                <div className=\"loginform\">\r\n                    <h1 className=\"loginn my-4 font-weight-bold .display-4 text-center\" style={{\r\n                        color:\"red\",\r\n                    }}>Login</h1>\r\n\r\n\r\n                    <Form >\r\n                        <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                        <TextField label=\"password\" name=\"password\" type=\"password\" />\r\n                        <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" />\r\n                        <button type=\"Submit\" className=\"registerbtn\">\r\n                            Login\r\n                        </button>\r\n                        \r\n                        \r\n                    </Form>\r\n                    \r\n\r\n\r\n                </div>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,iBAAiB,QAAQ,4BAA4B;AAAC;AAE/D,MAAMC,KAAK,GAAG,MAAM;EAEhB,MAAMC,QAAQ,GAAGJ,GAAG,CAACK,MAAM,CAAC;IACxBC,KAAK,EAAEN,GAAG,CAACO,MAAM,EAAE,CACdD,KAAK,CAAC,kBAAkB,CAAC,CACzBE,QAAQ,CAAC,mBAAmB,CAAC;IAClCC,QAAQ,EAAET,GAAG,CAACO,MAAM,EAAE,CACjBG,GAAG,CAAC,CAAC,EAAE,uCAAuC,CAAC,CAC/CF,QAAQ,CAAC,sBAAsB,CAAC;IACrCG,eAAe,EAAEX,GAAG,CAACO,MAAM,EAAE,CACxBK,KAAK,CAAC,CAACZ,GAAG,CAACa,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,qBAAqB,CAAC,CACzDL,QAAQ,CAAC,8BAA8B;EAChD,CAAC,CAAC;EAEF,oBACI,QAAC,MAAM;IACH,aAAa,EAAE;MACXF,KAAK,EAAE,EAAE;MACTG,QAAQ,EAAE,EAAE;MACZE,eAAe,EAAE;IACrB,CAAE;IACF,gBAAgB,EAAEP,QAAS;IAC3B,QAAQ,EAAEU,MAAM,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACvB,CAAE;IAAA,UAEDjB,MAAM,iBACH;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAI,SAAS,EAAC,qDAAqD;QAAC,KAAK,EAAE;UACvEoB,KAAK,EAAC;QACV,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eAGb,QAAC,IAAI;QAAA,wBACD,QAAC,SAAS;UAAC,KAAK,EAAC,OAAO;UAAC,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACrD,QAAC,SAAS;UAAC,KAAK,EAAC,UAAU;UAAC,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9D,QAAC,SAAS;UAAC,KAAK,EAAC,kBAAkB;UAAC,IAAI,EAAC,iBAAiB;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7E;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,aAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEpC;MAAA;QAAA;QAAA;QAAA;MAAA,QAGN;IAAA;MAAA;MAAA;MAAA;IAAA;EAKd;IAAA;IAAA;IAAA;EAAA,QACI;AAEjB,CAAC;AAAA,KAlDKd,KAAK;AAoDX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
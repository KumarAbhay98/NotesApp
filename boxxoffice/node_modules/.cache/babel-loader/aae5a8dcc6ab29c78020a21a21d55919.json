{"ast":null,"code":"var _jsxFileName = \"D:\\\\boXXoFFice\\\\boxxoffice\\\\src\\\\component\\\\Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { TextField } from './Textfield';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const validate = Yup.object({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, 'Password must contain at least one lowercase letter, one uppercase letter, one digit, and one special character').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match').required('Confirm password is required')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      // Print the values on console and show an alert\n      console.log(values);\n      alert('You have successfully logged in');\n    },\n    children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginform\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loginn my-4 font-weight-bold .display-4 text-center\",\n        style: {\n          color: \"red\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          name: \"confirmPassword\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"registerbtn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn btn-dark mt-3\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Link","Formik","Form","TextField","Yup","Login","validate","object","email","string","required","password","matches","confirmPassword","oneOf","ref","values","console","log","alert","color"],"sources":["D:/boXXoFFice/boxxoffice/src/component/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './Textfield';\r\nimport * as Yup from 'yup';\r\n\r\nconst Login = () => {\r\n  const validate = Yup.object({\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    password: Yup.string()\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\r\n        'Password must contain at least one lowercase letter, one uppercase letter, one digit, and one special character'\r\n      )\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Password must match')\r\n      .required('Confirm password is required'),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n      }}\r\n      validationSchema={validate}\r\n      onSubmit={values => {\r\n        // Print the values on console and show an alert\r\n        console.log(values);\r\n        alert('You have successfully logged in');\r\n      }}\r\n    >\r\n      {Formik => (\r\n        <div className=\"loginform\">\r\n          <h1 className=\"loginn my-4 font-weight-bold .display-4 text-center\" style={{ color: \"red\" }}>Login</h1>\r\n          <Form>\r\n            <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n            <TextField label=\"Password\" name=\"password\" type=\"password\" />\r\n            <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" />\r\n            <button type=\"submit\" className=\"registerbtn\">Login</button>\r\n            <Link to=\"/\" className=\"btn btn-dark mt-3\">Back</Link>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAE3B,MAAMC,KAAK,GAAG,MAAM;EAClB,MAAMC,QAAQ,GAAGF,GAAG,CAACG,MAAM,CAAC;IAC1BC,KAAK,EAAEJ,GAAG,CAACK,MAAM,EAAE,CAChBD,KAAK,CAAC,kBAAkB,CAAC,CACzBE,QAAQ,CAAC,mBAAmB,CAAC;IAChCC,QAAQ,EAAEP,GAAG,CAACK,MAAM,EAAE,CACnBG,OAAO,CACN,sEAAsE,EACtE,iHAAiH,CAClH,CACAF,QAAQ,CAAC,sBAAsB,CAAC;IACnCG,eAAe,EAAET,GAAG,CAACK,MAAM,EAAE,CAC1BK,KAAK,CAAC,CAACV,GAAG,CAACW,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,qBAAqB,CAAC,CACzDL,QAAQ,CAAC,8BAA8B;EAC5C,CAAC,CAAC;EAEF,oBACE,QAAC,MAAM;IACL,aAAa,EAAE;MACbF,KAAK,EAAE,EAAE;MACTG,QAAQ,EAAE,EAAE;MACZE,eAAe,EAAE;IACnB,CAAE;IACF,gBAAgB,EAAEP,QAAS;IAC3B,QAAQ,EAAEU,MAAM,IAAI;MAClB;MACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBG,KAAK,CAAC,iCAAiC,CAAC;IAC1C,CAAE;IAAA,UAEDlB,MAAM,iBACL;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAI,SAAS,EAAC,qDAAqD;QAAC,KAAK,EAAE;UAAEmB,KAAK,EAAE;QAAM,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eACvG,QAAC,IAAI;QAAA,wBACH,QAAC,SAAS;UAAC,KAAK,EAAC,OAAO;UAAC,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACrD,QAAC,SAAS;UAAC,KAAK,EAAC,UAAU;UAAC,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9D,QAAC,SAAS;UAAC,KAAK,EAAC,kBAAkB;UAAC,IAAI,EAAC,iBAAiB;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7E;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,aAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eAC5D,QAAC,IAAI;UAAC,EAAE,EAAC,GAAG;UAAC,SAAS,EAAC,mBAAmB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QACjD;IAAA;MAAA;MAAA;MAAA;IAAA;EAEV;IAAA;IAAA;IAAA;EAAA,QACM;AAEb,CAAC;AAAC,KA5CIf,KAAK;AA8CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
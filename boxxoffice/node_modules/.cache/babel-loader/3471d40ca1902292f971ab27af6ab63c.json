{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\boXXoFFice\\\\boxxoffice\\\\src\\\\component\\\\Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { TextField } from './Textfield';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  const validate = Yup.object({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 charaters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match').required('Confirm password is required')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loginn my-4 font-weight-bold .display-4 text-center\",\n        style: {\n          color: \"red\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"loginform\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          name: \"confirmPassword\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"registerbtn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Home\",\n          className: \"btn btn-dark mt-3\",\n          type: \"submit\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Link","Formik","Form","TextField","Yup","Login","validate","object","email","string","required","password","min","confirmPassword","oneOf","ref","values","console","log","color"],"sources":["C:/Users/DELL/OneDrive/Desktop/boXXoFFice/boxxoffice/src/component/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './Textfield';\r\nimport * as Yup from 'yup';\r\n\r\nconst Login = () => {\r\n    const validate = Yup.object({\r\n       \r\n        email: Yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n        password: Yup.string()\r\n            .min(6, 'Password must be at least 6 charaters')\r\n            .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Password must match')\r\n            .required('Confirm password is required'),\r\n    })\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n               \r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            }}\r\n            validationSchema={validate}\r\n            onSubmit={values => {\r\n                console.log(values)\r\n            }}\r\n        >\r\n            {Formik => (\r\n                <div>\r\n                    <h1 className=\"loginn my-4 font-weight-bold .display-4 text-center\" style={{\r\n                        color:\"red\",\r\n                       \r\n                    }}>Login</h1>\r\n                    <Form className=\"loginform\">\r\n                        \r\n                        <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                        <TextField label=\"password\" name=\"password\" type=\"password\" />\r\n                        <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" />\r\n                        <button type=\"submit\" className=\"registerbtn\">\r\n                            Login\r\n                        </button>\r\n                        <Link to=\"/Home\" className=\"btn btn-dark mt-3\" type=\"submit\">Back</Link>\r\n                        \r\n                    </Form>\r\n                </div>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAChB,MAAMC,QAAQ,GAAGF,GAAG,CAACG,MAAJ,CAAW;IAExBC,KAAK,EAAEJ,GAAG,CAACK,MAAJ,GACFD,KADE,CACI,kBADJ,EAEFE,QAFE,CAEO,mBAFP,CAFiB;IAKxBC,QAAQ,EAAEP,GAAG,CAACK,MAAJ,GACLG,GADK,CACD,CADC,EACE,uCADF,EAELF,QAFK,CAEI,sBAFJ,CALc;IAQxBG,eAAe,EAAET,GAAG,CAACK,MAAJ,GACZK,KADY,CACN,CAACV,GAAG,CAACW,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADM,EACuB,qBADvB,EAEZL,QAFY,CAEH,8BAFG;EARO,CAAX,CAAjB;EAYA,oBACI,QAAC,MAAD;IACI,aAAa,EAAE;MAEXF,KAAK,EAAE,EAFI;MAGXG,QAAQ,EAAE,EAHC;MAIXE,eAAe,EAAE;IAJN,CADnB;IAOI,gBAAgB,EAAEP,QAPtB;IAQI,QAAQ,EAAEU,MAAM,IAAI;MAChBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACH,CAVL;IAAA,UAYKf,MAAM,iBACH;MAAA,wBACI;QAAI,SAAS,EAAC,qDAAd;QAAoE,KAAK,EAAE;UACvEkB,KAAK,EAAC;QADiE,CAA3E;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI,QAAC,IAAD;QAAM,SAAS,EAAC,WAAhB;QAAA,wBAEI,QAAC,SAAD;UAAW,KAAK,EAAC,OAAjB;UAAyB,IAAI,EAAC,OAA9B;UAAsC,IAAI,EAAC;QAA3C;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,SAAD;UAAW,KAAK,EAAC,UAAjB;UAA4B,IAAI,EAAC,UAAjC;UAA4C,IAAI,EAAC;QAAjD;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII,QAAC,SAAD;UAAW,KAAK,EAAC,kBAAjB;UAAoC,IAAI,EAAC,iBAAzC;UAA2D,IAAI,EAAC;QAAhE;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAC,aAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ,eAQI,QAAC,IAAD;UAAM,EAAE,EAAC,OAAT;UAAiB,SAAS,EAAC,mBAA3B;UAA+C,IAAI,EAAC,QAApD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAbR;IAAA;IAAA;IAAA;EAAA,QADJ;AAkCH,CA/CD;;KAAMd,K;AAiDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}